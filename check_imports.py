"""V√©rification de tous les imports du projet"""

print("üîç V√©rification des imports...\n")

# 1. V√©rifier les mod√®les
print("=== MODELS ===")
try:
    from models.jurisprudence_models import JurisprudenceReference, VerificationResult, SourceJurisprudence
    print("‚úÖ models.jurisprudence_models OK")
except ImportError as e:
    print(f"‚ùå models.jurisprudence_models MANQUANT: {e}")

try:
    from models.dataclasses import Document, PieceSelectionnee
    print("‚úÖ models.dataclasses OK")
except ImportError as e:
    print(f"‚ùå models.dataclasses MANQUANT: {e}")

# 2. V√©rifier les managers
print("\n=== MANAGERS ===")
try:
    from managers.legal_search import LegalSearchManager, display_legal_search_interface
    print("‚úÖ managers.legal_search OK")
except ImportError as e:
    print(f"‚ùå managers.legal_search MANQUANT: {e}")

try:
    from managers.dynamic_generators import generate_dynamic_search_prompts
    print("‚úÖ managers.dynamic_generators OK")
except ImportError as e:
    print(f"‚ùå managers.dynamic_generators MANQUANT: {e}")

try:
    from managers.jurisprudence_verifier import JurisprudenceVerifier
    print("‚úÖ managers.jurisprudence_verifier OK")
except ImportError as e:
    print(f"‚ùå managers.jurisprudence_verifier PROBL√àME: {e}")

try:
    from managers.azure_blob_manager import AzureBlobManager
    print("‚úÖ managers.azure_blob_manager OK")
except ImportError as e:
    print(f"‚ùå managers.azure_blob_manager MANQUANT: {e}")

try:
    from managers.azure_search_manager import AzureSearchManager
    print("‚úÖ managers.azure_search_manager OK")
except ImportError as e:
    print(f"‚ùå managers.azure_search_manager MANQUANT: {e}")

try:
    from managers.multi_llm_manager import MultiLLMManager
    print("‚úÖ managers.multi_llm_manager OK")
except ImportError as e:
    print(f"‚ùå managers.multi_llm_manager MANQUANT: {e}")

try:
    from managers.document_manager import display_import_interface
    print("‚úÖ managers.document_manager OK")
except ImportError as e:
    print(f"‚ùå managers.document_manager MANQUANT: {e}")

# 3. V√©rifier la config
print("\n=== CONFIG ===")
try:
    from config.app_config import SearchMode, ANALYSIS_PROMPTS_AFFAIRES, LLMProvider
    print("‚úÖ config.app_config OK")
except ImportError as e:
    print(f"‚ùå config.app_config MANQUANT: {e}")

# 4. V√©rifier les utils
print("\n=== UTILS ===")
try:
    from utils.helpers import clean_key
    print("‚úÖ utils.helpers OK")
except ImportError as e:
    print(f"‚ùå utils.helpers MANQUANT: {e}")

# 5. V√©rifier les biblioth√®ques externes
print("\n=== BIBLIOTH√àQUES EXTERNES ===")
try:
    import pandas as pd
    print("‚úÖ pandas OK")
except ImportError:
    print("‚ö†Ô∏è pandas non install√© (optionnel)")

try:
    import plotly.graph_objects as go
    print("‚úÖ plotly OK")
except ImportError:
    print("‚ö†Ô∏è plotly non install√© (optionnel)")

try:
    import networkx as nx
    print("‚úÖ networkx OK")
except ImportError:
    print("‚ö†Ô∏è networkx non install√© (optionnel)")

try:
    import docx
    print("‚úÖ python-docx OK")
except ImportError:
    print("‚ö†Ô∏è python-docx non install√© (optionnel)")

print("\n‚úÖ V√©rification termin√©e !")